#!/bin/sh

# {{{ functions

db_action() {
    s6-rc-db -c "${DBPATH}" "$@"
}

a_newbundle() {
    for j in $new_bundles; do
        if [ "$j" = "$1" ]; then
            return 0
        fi
    done
    return 1
}

service_exists() {
    for k in $all_services; do
        if [ "$k" = "$1" ]; then
            return 0
        fi
    done
    return 1
}

in_newbundle() {
    bundle_contents=$(db_action contents "$1")
    for l in $bundle_contents; do
        if [ "$l" = "$2" ]; then
            return 0
        fi
    done
    return 1
}

# }}}


# main

RCPATH='/etc/s6/rc'
DBPATH="${RCPATH}/compiled"
SVPATH='/etc/s6/sv'
SVDIRS='/run/s6-rc/servicedirs'
TIMESTAMP=$(date +%s)

if [ -e "${DBPATH}" ]; then
    # Print contents of older bundles, using the format:
    # <name1>
    # <sv1> <sv2> <sv3> ... <svN>
    # <name2>
    # <sv1> ... <svN>
    old_bundle_contents=$(
        for bundle in $(db_action list bundles); do
	        printf '%s\n' \
                "$bundle" "$(db_action contents "$bundle" | paste -sd" ")"
	    done
    )
fi

if ! s6-rc-compile "${DBPATH}"-"${TIMESTAMP}" "${SVPATH}"; then
    echo "Error compiling database."
    echo "Please double check the ${SVPATH} directories. Exiting."
    exit 1
fi

if [ -e "/run/s6-rc" ]; then
    for dir in "${SVDIRS}"/*; do
        if [ -e "${dir}/down" ]; then
            s6-svc -x "${dir}"
        fi
    done
    s6-rc-update "${DBPATH}"-"${TIMESTAMP}"
fi

if [ -d "${DBPATH}" ]; then
    ln -sf "${DBPATH}"-"${TIMESTAMP}" "${DBPATH}"/compiled && mv -f "${DBPATH}"/compiled "${RCPATH}"
else
    ln -sf "${DBPATH}"-"${TIMESTAMP}" "${DBPATH}"
fi

new_bundles=$(db_action list bundles)
all_services=$(db_action list all)

while read -r m && read -r old_contents; do
    a_newbundle "$m"
    ret=$?

    for n in $old_contents; do

        if service_exists "$n"; then
            if [ $ret -eq 1 ]; then
                # No bundle exists, queue its creation
                new_contents="$new_contents $n"
            elif ! in_newbundle "$m" "$n"; then
                # bundle exists, but service isn't in it, add it
                s6-rc-bundle-update -c "${DBPATH}" add "$m" "$n"
            fi
        fi

        if [ -n "$new_contents" ]; then
            s6-rc-bundle -c "${DBPATH}" add "$m" $new_contents
        fi
    done
    new_contents=''
done <<EOF
$old_bundle_contents
EOF

echo "==> Switched to a new database."
echo "    Remove any old unwanted/unneeded database directories in ${RCPATH}."
